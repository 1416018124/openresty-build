
user  root;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
error_log  logs/error.log  debug;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;


    init_by_lua_file lua/init/init_conf.lua;
    init_worker_by_lua_file lua/init/init_worker_main.lua;
    lua_shared_dict conf 10m;
    lua_shared_dict healthcheck_store 10m;
    lua_shared_dict my_worker_events 10m;
    vhost_traffic_status_zone;
    vhost_traffic_status_filter_by_host on;


    log_format http_access '{"time": "$time_local","domain": "$host", "remote_addr": "$remote_addr", "remote_user": "$remote_user", "http_host": "$http_host", "request_uri": "$request_uri", "request_method": "$request_method", "status": $status, "upstream_addr": "$upstream_addr", "request_length": $request_length, "body_bytes_sent": $body_bytes_sent, "request_time": $request_time, "upstream_response_time": $upstream_response_time, "upstream_status": $upstream_status, "http_user_agent": "$http_user_agent", "scheme":"$scheme", "x_real_ip":"$http_x_real_ip"}';

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    include http.d/*.conf;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;
        location /status {
            vhost_traffic_status_display;
            #vhost_traffic_status_display_format html;
	        vhost_traffic_status_display_format prometheus;
        }

        location /check_status {
	        check_status;
	    }

        location /get_conf {
            content_by_lua_file lua/content/domain_conf.lua;
        }

        location / {
            root   html;
            index  index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }



}
